# set zsh as default shell
set-option -g default-shell /bin/zsh

# For macOS Sierra to get rid of clipboard:error
# http://stackoverflow.com/questions/39645253/clipboard-failure-in-tmux-vim-after-upgrading-to-macos-sierra
set -g default-shell $SHELL

# set ctrl-x as prefix
set -g prefix C-x
unbind-key C-b
bind-key C-x send-prefix

# a to move across windows
bind a next-window

# open new tmux panes in the same path which it split off from
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind c new-window -c "$HOME"

# set base indexing of panes to start at 1
set -g base-index 1

# set r to reload tmux config
bind r source-file ~/.tmux.conf

# enable window titles
set -g set-titles on

# set 256 colours
set -g default-terminal "screen-256color"

# bind meta-number keys to window selection
# don't forget to set the option key to Meta/+Esc in iTerm
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-h previous-window
bind-key -n M-l next-window

# disallow processes from renaming windows
set-option -g allow-rename off

# enable mouse mode in tmux
set-option -g -q mouse on
# the correct way to fix mouse scroll up to work in vim (aka send the scroll event to vim instead of scrolling in tmux history buffer)
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \;                 send-keys -M

####################
# status line config
###################
# Nice reference for tmux 256 color palette
# https://qiita-image-store.s3.amazonaws.com/0/5321/aadbe7a5-9226-4fe0-25cc-8b2d031a75e2.png
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-attr dim
set -g status-left ''
# client_prefix tells if the prefix has been activated
set -g status-right '#{?client_prefix,X ,}#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1
################
# END status line config
################

# Styling for active panes
set -g pane-active-border-fg colour1
set -g pane-active-border-bg colour235

#####
# Settings for getting tmux copy and paste to work nicely on OS X
#####
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
#bind-key -T copy-mode-vi v begin-selection
#bind-key -T copy-mode-vi y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
#unbind -T copy-mode-vi Enter
#bind-key -T copy-mode-vi Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#####
# tmux plugins
#####
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.tmux/plugins/tpm/tpm'
